// Generated by Haxe 4.3.3
#ifndef INCLUDED_genesis_GsMainloop
#define INCLUDED_genesis_GsMainloop

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(genesis,GsMainloop)

namespace genesis{


class HXCPP_CLASS_ATTRIBUTES GsMainloop_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef GsMainloop_obj OBJ_;
		GsMainloop_obj();

	public:
		enum { _hx_ClassId = 0x719eedf1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="genesis.GsMainloop")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"genesis.GsMainloop"); }

		inline static ::hx::ObjectPtr< GsMainloop_obj > __new() {
			::hx::ObjectPtr< GsMainloop_obj > __this = new GsMainloop_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< GsMainloop_obj > __alloc(::hx::Ctx *_hx_ctx) {
			GsMainloop_obj *__this = (GsMainloop_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GsMainloop_obj), false, "genesis.GsMainloop"));
			*(void **)__this = GsMainloop_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~GsMainloop_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("GsMainloop",89,15,2c,a6); }

		static  ::Dynamic _func;
		static Dynamic _func_dyn() { return _func;}
		static void call();
		static ::Dynamic call_dyn();

		static void start( ::Dynamic fun);
		static ::Dynamic start_dyn();

};

} // end namespace genesis

#endif /* INCLUDED_genesis_GsMainloop */ 
