// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_4dbe585c96d08098
#define INCLUDED_4dbe585c96d08098
#include "genesis.h"
#endif
#ifndef INCLUDED_0dc8763c2770302b
#define INCLUDED_0dc8763c2770302b
#include "portal.h"
#endif
#ifndef INCLUDED_portal__Portal
#include <portal/_Portal.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_87_getVersionString,"portal._Portal","getVersionString",0xdf6d74f8,"portal._Portal.getVersionString","portal/Portal.hx",87,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_91_createConfig,"portal._Portal","createConfig",0xe9f1a5c3,"portal._Portal.createConfig","portal/Portal.hx",91,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_95_destroyConfig,"portal._Portal","destroyConfig",0x66cee8d7,"portal._Portal.destroyConfig","portal/Portal.hx",95,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_99_createBackend,"portal._Portal","createBackend",0xb4cd8df3,"portal._Portal.createBackend","portal/Portal.hx",99,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_103_destroyBackend,"portal._Portal","destroyBackend",0x798afc5f,"portal._Portal.destroyBackend","portal/Portal.hx",103,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_107_getOptimalBackendType,"portal._Portal","getOptimalBackendType",0x9aefe33d,"portal._Portal.getOptimalBackendType","portal/Portal.hx",107,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_111_init,"portal._Portal","init",0x77095cf5,"portal._Portal.init","portal/Portal.hx",111,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_115_createWindow,"portal._Portal","createWindow",0x74abe2f1,"portal._Portal.createWindow","portal/Portal.hx",115,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_119_destroyWindow,"portal._Portal","destroyWindow",0xf1892605,"portal._Portal.destroyWindow","portal/Portal.hx",119,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_123_shouldWindowClose,"portal._Portal","shouldWindowClose",0x9d8a4730,"portal._Portal.shouldWindowClose","portal/Portal.hx",123,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_127_swapBuffers,"portal._Portal","swapBuffers",0x183c7ddb,"portal._Portal.swapBuffers","portal/Portal.hx",127,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_131_pollEvents,"portal._Portal","pollEvents",0xa566165d,"portal._Portal.pollEvents","portal/Portal.hx",131,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_135_getWindowWidth,"portal._Portal","getWindowWidth",0x546af125,"portal._Portal.getWindowWidth","portal/Portal.hx",135,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_139_getWindowHeight,"portal._Portal","getWindowHeight",0x3f7787e8,"portal._Portal.getWindowHeight","portal/Portal.hx",139,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_143_getFramebufferWidth,"portal._Portal","getFramebufferWidth",0x180e464a,"portal._Portal.getFramebufferWidth","portal/Portal.hx",143,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_147_getFramebufferHeight,"portal._Portal","getFramebufferHeight",0xaabeb323,"portal._Portal.getFramebufferHeight","portal/Portal.hx",147,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_151_useGLContext,"portal._Portal","useGLContext",0x30496008,"portal._Portal.useGLContext","portal/Portal.hx",151,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_155_getInputEventCount,"portal._Portal","getInputEventCount",0x79dbafae,"portal._Portal.getInputEventCount","portal/Portal.hx",155,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_159_pullInputEvent,"portal._Portal","pullInputEvent",0x23ad39fa,"portal._Portal.pullInputEvent","portal/Portal.hx",159,0x5f47a70f)
HX_LOCAL_STACK_FRAME(_hx_pos_19836884d2a2c162_163_shutdown,"portal._Portal","shutdown",0x6f4174fb,"portal._Portal.shutdown","portal/Portal.hx",163,0x5f47a70f)
namespace portal{

void _Portal_obj::__construct() { }

Dynamic _Portal_obj::__CreateEmpty() { return new _Portal_obj; }

void *_Portal_obj::_hx_vtable = 0;

Dynamic _Portal_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< _Portal_obj > _hx_result = new _Portal_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool _Portal_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1ef74813;
}

::String _Portal_obj::getVersionString(){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_87_getVersionString)
HXDLIN(  87)		return ((((PT_VERSION_MAJOR + HX_(".",2e,00,00,00)) + PT_VERSION_MINOR) + HX_(".",2e,00,00,00)) + PT_VERSION_PATCH);
            	}


 PtConfig * _Portal_obj::createConfig(){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_91_createConfig)
HXDLIN(  91)		return pt_create_config();
            	}


void _Portal_obj::destroyConfig( PtConfig * config){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_95_destroyConfig)
HXDLIN(  95)		pt_destroy_config(config);
            	}


 PtBackend * _Portal_obj::createBackend( cpp::Struct<PtBackendType> type){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_99_createBackend)
HXDLIN(  99)		return pt_create_backend(type);
            	}


void _Portal_obj::destroyBackend( PtBackend * backend){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_103_destroyBackend)
HXDLIN( 103)		pt_destroy_backend(backend);
            	}


 cpp::Struct<PtBackendType> _Portal_obj::getOptimalBackendType(){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_107_getOptimalBackendType)
HXDLIN( 107)		return pt_get_optimal_backend_type();
            	}


void _Portal_obj::init( PtConfig * config){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_111_init)
HXDLIN( 111)		pt_init(config);
            	}


 PtWindow * _Portal_obj::createWindow(::String title,int width,int height){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_115_createWindow)
HXDLIN( 115)		return pt_create_window(title,width,height);
            	}


void _Portal_obj::destroyWindow( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_119_destroyWindow)
HXDLIN( 119)		pt_destroy_window(window);
            	}


int _Portal_obj::shouldWindowClose( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_123_shouldWindowClose)
HXDLIN( 123)		return pt_should_window_close(window);
            	}


void _Portal_obj::swapBuffers( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_127_swapBuffers)
HXDLIN( 127)		pt_swap_buffers(window);
            	}


void _Portal_obj::pollEvents( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_131_pollEvents)
HXDLIN( 131)		pt_poll_events(window);
            	}


int _Portal_obj::getWindowWidth( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_135_getWindowWidth)
HXDLIN( 135)		return pt_get_window_width(window);
            	}


int _Portal_obj::getWindowHeight( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_139_getWindowHeight)
HXDLIN( 139)		return pt_get_window_height(window);
            	}


int _Portal_obj::getFramebufferWidth( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_143_getFramebufferWidth)
HXDLIN( 143)		return pt_get_framebuffer_width(window);
            	}


int _Portal_obj::getFramebufferHeight( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_147_getFramebufferHeight)
HXDLIN( 147)		return pt_get_framebuffer_height(window);
            	}


int _Portal_obj::useGLContext( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_151_useGLContext)
HXDLIN( 151)		return pt_use_gl_context(window);
            	}


int _Portal_obj::getInputEventCount( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_155_getInputEventCount)
HXDLIN( 155)		return pt_get_input_event_count(window);
            	}


 PtInputEventData _Portal_obj::pullInputEvent( PtWindow * window){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_159_pullInputEvent)
HXDLIN( 159)		return pt_pull_input_event(window);
            	}


void _Portal_obj::shutdown(){
            	HX_STACKFRAME(&_hx_pos_19836884d2a2c162_163_shutdown)
HXDLIN( 163)		pt_shutdown();
            	}



_Portal_obj::_Portal_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *_Portal_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *_Portal_obj_sStaticStorageInfo = 0;
#endif

::hx::Class _Portal_obj::__mClass;

void _Portal_obj::__register()
{
	_Portal_obj _hx_dummy;
	_Portal_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("portal._Portal",a9,88,a3,d7);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< _Portal_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = _Portal_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = _Portal_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace portal
