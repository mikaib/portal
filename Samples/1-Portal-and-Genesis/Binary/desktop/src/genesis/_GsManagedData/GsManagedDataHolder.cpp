// Generated by Haxe 4.3.3
#include <hxcpp.h>

#ifndef INCLUDED_genesis__GsManagedData_GsManagedDataHolder
#include <genesis/_GsManagedData/GsManagedDataHolder.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_99793c9097b08b96_8_new,"genesis._GsManagedData.GsManagedDataHolder","new",0x97908a51,"genesis._GsManagedData.GsManagedDataHolder.new","genesis/GsManagedData.hx",8,0x3bfa7668)
HX_LOCAL_STACK_FRAME(_hx_pos_99793c9097b08b96_19_getPtr,"genesis._GsManagedData.GsManagedDataHolder","getPtr",0x212deda7,"genesis._GsManagedData.GsManagedDataHolder.getPtr","genesis/GsManagedData.hx",19,0x3bfa7668)
HX_LOCAL_STACK_FRAME(_hx_pos_99793c9097b08b96_23_getSize,"genesis._GsManagedData.GsManagedDataHolder","getSize",0xe8f556e8,"genesis._GsManagedData.GsManagedDataHolder.getSize","genesis/GsManagedData.hx",23,0x3bfa7668)
HX_LOCAL_STACK_FRAME(_hx_pos_99793c9097b08b96_10_create,"genesis._GsManagedData.GsManagedDataHolder","create",0xfa18b9ab,"genesis._GsManagedData.GsManagedDataHolder.create","genesis/GsManagedData.hx",10,0x3bfa7668)
namespace genesis{
namespace _GsManagedData{

void GsManagedDataHolder_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_99793c9097b08b96_8_new)
            	}

Dynamic GsManagedDataHolder_obj::__CreateEmpty() { return new GsManagedDataHolder_obj; }

void *GsManagedDataHolder_obj::_hx_vtable = 0;

Dynamic GsManagedDataHolder_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GsManagedDataHolder_obj > _hx_result = new GsManagedDataHolder_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GsManagedDataHolder_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x745b0543;
}

void * GsManagedDataHolder_obj::getPtr(){
            	HX_STACKFRAME(&_hx_pos_99793c9097b08b96_19_getPtr)
HXDLIN(  19)		return this->ptr;
            	}


static ::Dynamic _hx_wrapGsManagedDataHolder_obj_getPtr( ::hx::Object *obj) {
	return (cpp::Pointer<const void *>) reinterpret_cast< GsManagedDataHolder_obj *>(obj)->getPtr();
}
::Dynamic GsManagedDataHolder_obj::getPtr_dyn() {
	return ::hx::CreateMemberFunction0("getPtr",this,_hx_wrapGsManagedDataHolder_obj_getPtr);}
int GsManagedDataHolder_obj::getSize(){
            	HX_STACKFRAME(&_hx_pos_99793c9097b08b96_23_getSize)
HXDLIN(  23)		return this->size;
            	}


HX_DEFINE_DYNAMIC_FUNC0(GsManagedDataHolder_obj,getSize,return )

 ::genesis::_GsManagedData::GsManagedDataHolder GsManagedDataHolder_obj::create(void * ptr,int size){
            	HX_GC_STACKFRAME(&_hx_pos_99793c9097b08b96_10_create)
HXLINE(  11)		 ::genesis::_GsManagedData::GsManagedDataHolder holder =  ::genesis::_GsManagedData::GsManagedDataHolder_obj::__alloc( HX_CTX );
HXLINE(  12)		holder->ptr = ptr;
HXLINE(  13)		holder->size = size;
HXLINE(  15)		return holder;
            	}


static ::Dynamic _hx_wrapGsManagedDataHolder_obj_create(  const Dynamic &a0,const Dynamic &a1) {
	return GsManagedDataHolder_obj::create((cpp::Pointer<void >) a0,a1);
}
::Dynamic GsManagedDataHolder_obj::create_dyn() {
	return ::hx::CreateStaticFunction2("create",_hx_wrapGsManagedDataHolder_obj_create);}

GsManagedDataHolder_obj::GsManagedDataHolder_obj()
{
}

void GsManagedDataHolder_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(GsManagedDataHolder);
	HX_MARK_MEMBER_NAME(ptr,"ptr");
	HX_MARK_MEMBER_NAME(size,"size");
	HX_MARK_END_CLASS();
}

void GsManagedDataHolder_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(ptr,"ptr");
	HX_VISIT_MEMBER_NAME(size,"size");
}

::hx::Val GsManagedDataHolder_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"ptr") ) { return ::hx::Val( cpp::Pointer<void *>( ptr ) ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"size") ) { return ::hx::Val( size ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"getPtr") ) { return ::hx::Val( getPtr_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"getSize") ) { return ::hx::Val( getSize_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool GsManagedDataHolder_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
	}
	return false;
}

::hx::Val GsManagedDataHolder_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"ptr") ) { ptr=inValue.Cast< cpp::Pointer< void > >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"size") ) { size=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void GsManagedDataHolder_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("ptr",ee,61,55,00));
	outFields->push(HX_("size",c1,a0,53,4c));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo GsManagedDataHolder_obj_sMemberStorageInfo[] = {
	{::hx::fsUnknown /* void * */ ,(int)offsetof(GsManagedDataHolder_obj,ptr),HX_("ptr",ee,61,55,00)},
	{::hx::fsInt,(int)offsetof(GsManagedDataHolder_obj,size),HX_("size",c1,a0,53,4c)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *GsManagedDataHolder_obj_sStaticStorageInfo = 0;
#endif

static ::String GsManagedDataHolder_obj_sMemberFields[] = {
	HX_("ptr",ee,61,55,00),
	HX_("size",c1,a0,53,4c),
	HX_("getPtr",f8,9a,24,a3),
	HX_("getSize",77,50,d6,1e),
	::String(null()) };

::hx::Class GsManagedDataHolder_obj::__mClass;

static ::String GsManagedDataHolder_obj_sStaticFields[] = {
	HX_("create",fc,66,0f,7c),
	::String(null())
};

void GsManagedDataHolder_obj::__register()
{
	GsManagedDataHolder_obj _hx_dummy;
	GsManagedDataHolder_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("genesis._GsManagedData.GsManagedDataHolder",df,0d,6f,f9);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GsManagedDataHolder_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(GsManagedDataHolder_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(GsManagedDataHolder_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< GsManagedDataHolder_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GsManagedDataHolder_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GsManagedDataHolder_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace genesis
} // end namespace _GsManagedData
