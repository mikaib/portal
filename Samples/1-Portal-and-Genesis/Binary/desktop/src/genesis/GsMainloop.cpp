// Generated by Haxe 4.3.6
#include <hxcpp.h>

#ifndef INCLUDED_4dbe585c96d08098
#define INCLUDED_4dbe585c96d08098
#include "genesis.h"
#endif
#ifndef INCLUDED_genesis_GsMainloop
#include <genesis/GsMainloop.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_79aa19981844e759_6_call,"genesis.GsMainloop","call",0x30ade99d,"genesis.GsMainloop.call","genesis/GsMainloop.hx",6,0xb95af1ae)
HX_LOCAL_STACK_FRAME(_hx_pos_79aa19981844e759_8_start,"genesis.GsMainloop","start",0xaa6e8283,"genesis.GsMainloop.start","genesis/GsMainloop.hx",8,0xb95af1ae)
namespace genesis{

void GsMainloop_obj::__construct() { }

Dynamic GsMainloop_obj::__CreateEmpty() { return new GsMainloop_obj; }

void *GsMainloop_obj::_hx_vtable = 0;

Dynamic GsMainloop_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GsMainloop_obj > _hx_result = new GsMainloop_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool GsMainloop_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x719eedf1;
}

 ::Dynamic GsMainloop_obj::_func;

void GsMainloop_obj::call(){
            	HX_STACKFRAME(&_hx_pos_79aa19981844e759_6_call)
HXDLIN(   6)		::genesis::GsMainloop_obj::_func();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(GsMainloop_obj,call,(void))

void GsMainloop_obj::start( ::Dynamic fun){
            	HX_STACKFRAME(&_hx_pos_79aa19981844e759_8_start)
HXLINE(   9)		::genesis::GsMainloop_obj::_func = fun;
HXLINE(  10)		gs_create_mainloop(::cpp::Function< void ()>(::hx::AnyCast(&::genesis::GsMainloop_obj::call )));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(GsMainloop_obj,start,(void))


GsMainloop_obj::GsMainloop_obj()
{
}

bool GsMainloop_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"call") ) { outValue = call_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"_func") ) { outValue = ( _func ); return true; }
		if (HX_FIELD_EQ(inName,"start") ) { outValue = start_dyn(); return true; }
	}
	return false;
}

bool GsMainloop_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"_func") ) { _func=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *GsMainloop_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo GsMainloop_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(void *) &GsMainloop_obj::_func,HX_("_func",23,07,d6,f6)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void GsMainloop_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(GsMainloop_obj::_func,"_func");
};

#ifdef HXCPP_VISIT_ALLOCS
static void GsMainloop_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(GsMainloop_obj::_func,"_func");
};

#endif

::hx::Class GsMainloop_obj::__mClass;

static ::String GsMainloop_obj_sStaticFields[] = {
	HX_("_func",23,07,d6,f6),
	HX_("call",9e,18,ba,41),
	HX_("start",62,74,0b,84),
	::String(null())
};

void GsMainloop_obj::__register()
{
	GsMainloop_obj _hx_dummy;
	GsMainloop_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("genesis.GsMainloop",cf,2f,50,d5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &GsMainloop_obj::__GetStatic;
	__mClass->mSetStaticField = &GsMainloop_obj::__SetStatic;
	__mClass->mMarkFunc = GsMainloop_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(GsMainloop_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< GsMainloop_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = GsMainloop_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GsMainloop_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GsMainloop_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace genesis
